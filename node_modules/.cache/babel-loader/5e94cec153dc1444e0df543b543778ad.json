{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\src\\views\\Home.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\src\\views\\Home.vue","mtime":1645098308741},{"path":"C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkLmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvbGVub3ZvL0Rlc2t0b3AvY29zdC9cdTVDMEZcdTgzQ0FcdThCQjBcdThEMjYvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9Vc2Vycy9sZW5vdm8vRGVza3RvcC9jb3N0L1x1NUMwRlx1ODNDQVx1OEJCMFx1OEQyNi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IHJlYWN0aXZlLCByZWYsIHRvUmVmcyB9IGZyb20gJ3Z1ZSc7CmltcG9ydCBDYXJkSXRlbSBmcm9tICcuLi9jb21wb25lbnRzL0NhcmRJdGVtLnZ1ZSc7CmltcG9ydCBQb3BUeXBlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wVHlwZS52dWUnOwppbXBvcnQgUG9wTW9udGggZnJvbSAnLi4vY29tcG9uZW50cy9Qb3BNb250aC52dWUnOwppbXBvcnQgUG9wQWRkIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wQWRkLnZ1ZSc7CmltcG9ydCBheGlvcyBmcm9tICcuLi91dGlscy9heGlvcyc7CmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7IC8vIOaXpeacn+aPkuS7tu+8jOS9v+eUqOS6jiBINSDnq6/vvIzkvZPnp6/ovoPlsI8KCi8qKg0KICog5rOo5oSPIGRheWpzIOaPkuS7tu+8jOaYr+exu+S8vCBtb21lbnQg5o+S5Lu255qE5a6e546w77yM5omA5Lul5a6D5Lus5Zyo5L2/55So5pa55byP5LiK5Z+65pys5piv5LiA6Ie055qE77yMDQogKiDlj6rkuI3ov4cgZGF5anMg5bCG5LiA5Lqb5L2/55So6aKR546H5LiN6auY55qE5pa55rOV5YGa5LqG5Yig5YeP77yM5YyF55qE5L2T56ev5bCx5Y+Y5bCP5LqG77yM5a+556e75Yqo56uv5pu05Yqg5Y+L5aW944CCDQogKiDkvb/nlKjml7bvvIzor7fpgJrov4cgbnBtIGluc3RhbGwgZGF5anMg6L+b6KGM5a6J6KOF44CCDQogKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDYXJkSXRlbTogQ2FyZEl0ZW0sCiAgICBQb3BUeXBlOiBQb3BUeXBlLAogICAgUG9wTW9udGg6IFBvcE1vbnRoLAogICAgUG9wQWRkOiBQb3BBZGQKICB9LAogIC8vIOaJgOaciSBzZXR1cCDlhoXpg6jlrprkuYnnmoTlh73mlbDlkozlj5jph4/vvIzpg73pnIDopoHpgJrov4cgcmV0dXJuIOaKm+WHuuaJjeiDveS9v+eUqAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cCgpIHsKICAgIC8vIOWjsOaYjiByZWbvvIzpgJrov4cgcG9wUmVmIOWPr+S7peaLv+WIsCBQb3BUeXBlIOe7hOS7tuWGheeahOWxnuaAp+WSjOaWueazlQogICAgdmFyIHBvcFJlZiA9IHJlZihudWxsKTsKICAgIHZhciBwb3BNb250aFJlZiA9IHJlZihudWxsKTsKICAgIHZhciBwb3BBZGRSZWYgPSByZWYobnVsbCk7IC8vIOa3u+WKoOi0puWNleW8ueeql+W8gOWFswoKICAgIHZhciBzdGF0ZSA9IHJlYWN0aXZlKHsKICAgICAgdG90YWxFeHBlbnNlOiAwLAogICAgICB0b3RhbEluY29tZTogMCwKICAgICAgcGFnZTogMSwKICAgICAgLy8g5YiX6KGo5YiG6aG1CiAgICAgIHRvdGFsUGFnZTogMCwKICAgICAgLy8g5oC76aG15pWwCiAgICAgIGxpc3Q6IFtdLAogICAgICAvLyDliJfooajmlbDmja4KICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGZpbmlzaGVkOiBmYWxzZSwKICAgICAgcmVmcmVzaGluZzogZmFsc2UsCiAgICAgIGN1cnJlbnRTZWxlY3Q6IHt9LAogICAgICBjdXJyZW50VGltZTogZGF5anMoKS5mb3JtYXQoJ1lZWVktTU0nKQogICAgfSk7IC8vIOiOt+WPlui0puWNleWIl+ihqOaWueazlQoKICAgIHZhciBnZXRCaWxsTGlzdCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfeWllbGQkYXhpb3MkZ2V0LCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoIi9iaWxsL2xpc3Q/ZGF0ZT0iLmNvbmNhdChzdGF0ZS5jdXJyZW50VGltZSwgIiZ0eXBlX2lkPSIpLmNvbmNhdChzdGF0ZS5jdXJyZW50U2VsZWN0LmlkIHx8ICdhbGwnLCAiJnBhZ2U9IikuY29uY2F0KHN0YXRlLnBhZ2UsICImcGFnZV9zaXplPTUiKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRnZXQuZGF0YTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOyAvLyDlpoLmnpwgcmVmcmVzaGluZyDkuLogdHJ1Ze+8jOS7o+ihqOS4i+aLieWIt+aWsOS6hu+8jOmcgOimgemHjee9riBsaXN0ID0gW10KCiAgICAgICAgICAgICAgICBpZiAoc3RhdGUucmVmcmVzaGluZykgewogICAgICAgICAgICAgICAgICBzdGF0ZS5saXN0ID0gW107CiAgICAgICAgICAgICAgICAgIHN0YXRlLnJlZnJlc2hpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7IC8vIOmAmui/hyBjb25jYXQg5bCG5pWw5o2u5ou85o6l5Zyo5pen55qEIGxpc3Qg5ZCO6Z2iCgogICAgICAgICAgICAgICAgc3RhdGUubGlzdCA9IHN0YXRlLmxpc3QuY29uY2F0KGRhdGEubGlzdCk7CiAgICAgICAgICAgICAgICBzdGF0ZS50b3RhbEV4cGVuc2UgPSBkYXRhLnRvdGFsRXhwZW5zZS50b0ZpeGVkKDIpOwogICAgICAgICAgICAgICAgc3RhdGUudG90YWxJbmNvbWUgPSBkYXRhLnRvdGFsSW5jb21lLnRvRml4ZWQoMik7CiAgICAgICAgICAgICAgICBzdGF0ZS50b3RhbFBhZ2UgPSBkYXRhLnRvdGFsUGFnZTsgLy8g5aaC5p6c5b2T5YmN6aG1IHBhZ2Ug5aSn5LqO562J5LqO5oC76aG15pWwIHRvdGFsUGFnZe+8jOWImeS7o+ihqOaVsOaNruW3sue7j+ivt+axguWujO+8jOWwhiBmaW5pc2hlZCDorr7nva7kuLogdHJ1ZQoKICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5wYWdlID49IHN0YXRlLnRvdGFsUGFnZSkgc3RhdGUuZmluaXNoZWQgPSB0cnVlOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIHJldHVybiBmdW5jdGlvbiBnZXRCaWxsTGlzdCgpIHsKICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9OwogICAgfSgpOyAvLyB2YW4tbGlzdCDliqDovb3mlrnms5UKCgogICAgdmFyIG9uTG9hZCA9IGZ1bmN0aW9uIG9uTG9hZCgpIHsKICAgICAgLy8g5b2T5LiN5piv5LiL5ouJ5Yi35paw5LiU5b2T5YmN6aG1IHBhZ2Ug5bCP5LqO5oC76aG15pWwIHRvdGFsUGFnZe+8jOmcgOimgeWKoOi9veS4i+S4gOmhteeahOaVsOaNru+8jOaJgOS7pei/memHjOWwhiBzdGF0ZS5wYWdlID0gc3RhdGUucGFnZSArIDEKICAgICAgaWYgKCFzdGF0ZS5yZWZyZXNoaW5nICYmIHN0YXRlLnBhZ2UgPCBzdGF0ZS50b3RhbFBhZ2UpIHsKICAgICAgICBzdGF0ZS5wYWdlID0gc3RhdGUucGFnZSArIDE7CiAgICAgIH0KCiAgICAgIGdldEJpbGxMaXN0KCk7CiAgICB9OyAvLyB2YW4tcHVsbC1yZWZyZXNoIOWIt+aWsOaWueazlQoKCiAgICB2YXIgb25SZWZyZXNoID0gZnVuY3Rpb24gb25SZWZyZXNoKCkgewogICAgICAvLyDmuIXnqbrliJfooajmlbDmja4KICAgICAgc3RhdGUuZmluaXNoZWQgPSBmYWxzZTsgLy8g6aG15pWw6YeN5Yi2CgogICAgICBzdGF0ZS5wYWdlID0gMTsgLy8g6YeN5paw5Yqg6L295pWw5o2uCiAgICAgIC8vIOWwhiBsb2FkaW5nIOiuvue9ruS4uiB0cnVl77yM6KGo56S65aSE5LqO5Yqg6L2954q25oCBCgogICAgICBzdGF0ZS5yZWZyZXNoaW5nID0gdHJ1ZTsKICAgICAgc3RhdGUubG9hZGluZyA9IHRydWU7CiAgICAgIG9uTG9hZCgpOwogICAgfTsgLy8g57G75Z6L5by556qX5byA5YWzCgoKICAgIHZhciB0b2dnbGUgPSBmdW5jdGlvbiB0b2dnbGUoKSB7CiAgICAgIC8qKg0KICAgICAgICogUG9wVHllIOe7hOS7tueahCB0b2dnbGUg5pa55rOV5ZyoIHBvcFJlZi52YWx1ZSDlhoXlj6/ku6Xmib7liLDvvIwNCiAgICAgICAqIOaJgOS7peWcqOatpOiwg+eUqCBwb3BSZWYudmFsdWUudG9nZ2xlIOaWueazle+8jA0KICAgICAgICog5Y+v5Lul6K6p5by556qX55qEIHNob3cg5bGe5oCn5Y+Y5Li6IHRydWXvvIzorqnlvLnnqpfku47lupXpg6jlvLnlh7rjgIINCiAgICAgICAqLwogICAgICBwb3BSZWYudmFsdWUudG9nZ2xlKCk7CiAgICB9OyAvLyDnrZvpgInnsbvlnosKCiAgICAvKioNCiAgICAgKiDov5nkuKrmlrnms5XlsIbkvKDlhaUgUG9wVHlwZSDnu4Tku7bvvIznu4Tku7blhoXpg6jlt7Lnu4/lo7DmmI7kuoYgZW1pdCDop6blj5HkuIvpnaLnmoQgc2VsZWN077yMDQogICAgICog5bm25LiU6ZmE5bim5LqG57G75Z6L5pWw5o2uIGl0ZW3vvIzmiYDku6XlnKjov5nph4zlj6/ku6Xmi7/liLDlsZ7mgKfvvIzlubblsIblhbbmmL7npLrliLDlpLTpg6jjgIINCiAgICAgKi8KCgogICAgdmFyIHNlbGVjdCA9IGZ1bmN0aW9uIHNlbGVjdChpdGVtKSB7CiAgICAgIHN0YXRlLmN1cnJlbnRTZWxlY3QgPSBpdGVtOwogICAgICBvblJlZnJlc2goKTsKICAgIH07IC8vIOaciOS7veW8ueeql+W8gOWFswoKCiAgICB2YXIgbW9udGhUb2dnbGUgPSBmdW5jdGlvbiBtb250aFRvZ2dsZSgpIHsKICAgICAgcG9wTW9udGhSZWYudmFsdWUudG9nZ2xlKCk7CiAgICB9OyAvLyDnrZvpgInmnIjku70KCgogICAgdmFyIHNlbGVjdE1vbnRoID0gZnVuY3Rpb24gc2VsZWN0TW9udGgoaXRlbSkgewogICAgICBzdGF0ZS5jdXJyZW50VGltZSA9IGl0ZW07CiAgICAgIG9uUmVmcmVzaCgpOwogICAgfTsgLy8g5re75Yqg6LSm5Y2V5by556qX5byA5YWzCgoKICAgIHZhciBhZGRUb2dnbGUgPSBmdW5jdGlvbiBhZGRUb2dnbGUoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdwb3BBZGRSZWYnLCBwb3BBZGRSZWYpOwogICAgICBwb3BBZGRSZWYudmFsdWUudG9nZ2xlKCk7CiAgICB9OwoKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvUmVmcyhzdGF0ZSkpLCB7fSwgewogICAgICBwb3BSZWY6IHBvcFJlZiwKICAgICAgcG9wTW9udGhSZWY6IHBvcE1vbnRoUmVmLAogICAgICBwb3BBZGRSZWY6IHBvcEFkZFJlZiwKICAgICAgdG9nZ2xlOiB0b2dnbGUsCiAgICAgIG1vbnRoVG9nZ2xlOiBtb250aFRvZ2dsZSwKICAgICAgYWRkVG9nZ2xlOiBhZGRUb2dnbGUsCiAgICAgIG9uTG9hZDogb25Mb2FkLAogICAgICBvblJlZnJlc2g6IG9uUmVmcmVzaCwKICAgICAgc2VsZWN0OiBzZWxlY3QsCiAgICAgIHNlbGVjdE1vbnRoOiBzZWxlY3RNb250aAogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["C:\\Users\\lenovo\\Desktop\\cost\\小菊记账\\src\\views\\Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <div class=\"header\">\r\n      <div class=\"type-wrap\" @click=\"toggle\">\r\n        <span class=\"title\">{{ currentSelect.name || '全部类型' }}</span>\r\n        <i class=\"iconfont leixing\" />\r\n      </div>\r\n      <div class=\"data-wrap\">\r\n        <span class=\"time\" @click=\"monthToggle\">{{ currentTime }} <i class=\"iconfont sort-down\" /></span>\r\n        <span class=\"expense\">总支出 ¥{{ totalExpense }}</span>\r\n        <span class=\"income\">总收入 ¥{{ totalIncome }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"content-wrap\">\r\n      <van-pull-refresh v-model=\"refreshing\" @refresh=\"onRefresh\">\r\n      <!-- 介绍一下 van-pull-refresh 组件的几个属性： -->\r\n      <!-- v-model=\"refreshing\"： 也是用于展示下拉刷新的 loading 状态。 -->\r\n      <!-- refresh：接收一个方法，用于重新加载数据 -->\r\n        <van-list\r\n          v-model:loading=\"loading\"\r\n          :finished=\"finished\"\r\n          finished-text=\"没有更多了\"\r\n          @load=\"onLoad\"\r\n        >\r\n        <!-- 介绍一下 van-list 组件的几个属性： -->\r\n        <!-- v-model:loading：加载数据时它会被设置成 true，这样就会有加载数据的效果。 -->\r\n        <!-- finished：当它为 false 代表列表数据还没有全部加载完，为 true 时，finished-text 的值就会被展示列表底部，这里是“没有更多了”，可自定义该值。 -->\r\n        <!-- load：它接收的是一个方法，该方法用于列表数据，一进入页面，该方法就会被触发默认开始加载数据。 -->\r\n          <CardItem v-for=\"item in list\" :bill=\"item\" :key=\"item\" />\r\n        </van-list>\r\n      </van-pull-refresh>\r\n    </div>\r\n    <div class=\"add\" @click=\"addToggle\">\r\n      <van-icon name=\"records\" />\r\n    </div>\r\n    <!-- 引入类型弹窗组件 -->\r\n    <PopType ref=\"popRef\" @select=\"select\" />\r\n    <PopMonth ref=\"popMonthRef\" @select=\"selectMonth\" />\r\n    <PopAdd ref=\"popAddRef\" @refresh=\"onRefresh\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, toRefs } from 'vue'\r\nimport CardItem from '../components/CardItem.vue'\r\nimport PopType from '../components/PopType.vue'\r\nimport PopMonth from '../components/PopMonth.vue'\r\nimport PopAdd from '../components/PopAdd.vue'\r\nimport axios from '../utils/axios'\r\nimport dayjs from 'dayjs' // 日期插件，使用于 H5 端，体积较小\r\n/**\r\n * 注意 dayjs 插件，是类似 moment 插件的实现，所以它们在使用方式上基本是一致的，\r\n * 只不过 dayjs 将一些使用频率不高的方法做了删减，包的体积就变小了，对移动端更加友好。\r\n * 使用时，请通过 npm install dayjs 进行安装。\r\n */\r\nexport default {\r\n  components: {\r\n    CardItem,\r\n    PopType,\r\n    PopMonth,\r\n    PopAdd\r\n  },\r\n  // 所有 setup 内部定义的函数和变量，都需要通过 return 抛出才能使用\r\n  setup() {\r\n    // 声明 ref，通过 popRef 可以拿到 PopType 组件内的属性和方法\r\n    const popRef = ref(null)\r\n    const popMonthRef = ref(null)\r\n    const popAddRef = ref(null)\r\n    // 添加账单弹窗开关\r\n    const state = reactive({\r\n      totalExpense: 0,\r\n      totalIncome: 0,\r\n      page: 1, // 列表分页\r\n      totalPage: 0, // 总页数\r\n      list: [], // 列表数据\r\n      loading: false,\r\n      finished: false,\r\n      refreshing: false,\r\n      currentSelect: {},\r\n      currentTime: dayjs().format('YYYY-MM')\r\n    })\r\n    // 获取账单列表方法\r\n    const getBillList = async () => {\r\n      // 请求列表接口\r\n      const { data } = await axios.get(`/bill/list?date=${state.currentTime}&type_id=${state.currentSelect.id || 'all'}&page=${state.page}&page_size=5`)\r\n      console.log(data)\r\n      // 如果 refreshing 为 true，代表下拉刷新了，需要重置 list = []\r\n      if (state.refreshing) {\r\n        state.list = []\r\n        state.refreshing = false\r\n      }\r\n      state.loading = false\r\n      // 通过 concat 将数据拼接在旧的 list 后面\r\n      state.list = state.list.concat(data.list)\r\n      state.totalExpense = data.totalExpense.toFixed(2)\r\n      state.totalIncome = data.totalIncome.toFixed(2)\r\n      state.totalPage = data.totalPage\r\n      // 如果当前页 page 大于等于总页数 totalPage，则代表数据已经请求完，将 finished 设置为 true\r\n      if (state.page >= state.totalPage) state.finished = true\r\n    }\r\n    // van-list 加载方法\r\n    const onLoad = () => {\r\n      // 当不是下拉刷新且当前页 page 小于总页数 totalPage，需要加载下一页的数据，所以这里将 state.page = state.page + 1\r\n      if (!state.refreshing && state.page < state.totalPage) {\r\n        state.page = state.page + 1\r\n      }\r\n      getBillList()\r\n    }\r\n    // van-pull-refresh 刷新方法\r\n    const onRefresh = () => {\r\n      // 清空列表数据\r\n      state.finished = false;\r\n      // 页数重制\r\n      state.page = 1\r\n      // 重新加载数据\r\n      // 将 loading 设置为 true，表示处于加载状态\r\n      state.refreshing = true\r\n      state.loading = true;\r\n      onLoad()\r\n    }\r\n    // 类型弹窗开关\r\n    const toggle = () => {\r\n      /**\r\n       * PopTye 组件的 toggle 方法在 popRef.value 内可以找到，\r\n       * 所以在此调用 popRef.value.toggle 方法，\r\n       * 可以让弹窗的 show 属性变为 true，让弹窗从底部弹出。\r\n       */\r\n      popRef.value.toggle()\r\n    }\r\n    // 筛选类型\r\n    /**\r\n     * 这个方法将传入 PopType 组件，组件内部已经声明了 emit 触发下面的 select，\r\n     * 并且附带了类型数据 item，所以在这里可以拿到属性，并将其显示到头部。\r\n     */\r\n    const select = (item) => {\r\n      state.currentSelect = item\r\n      onRefresh()\r\n    }\r\n    // 月份弹窗开关\r\n    const monthToggle = () => {\r\n      popMonthRef.value.toggle()\r\n    }\r\n    // 筛选月份\r\n    const selectMonth = (item) => {\r\n      state.currentTime = item\r\n      onRefresh()\r\n    }\r\n    // 添加账单弹窗开关\r\n    const addToggle = () => {\r\n      console.log('popAddRef', popAddRef)\r\n      popAddRef.value.toggle()\r\n    }\r\n\r\n    return {\r\n      ...toRefs(state),\r\n      popRef,\r\n      popMonthRef,\r\n      popAddRef,\r\n      toggle,\r\n      monthToggle,\r\n      addToggle,\r\n      onLoad,\r\n      onRefresh,\r\n      select,\r\n      selectMonth\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n@import url('../config/custom.less');\r\n\r\n.home {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 80px;\r\n  .header {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: @primary;\r\n    color: #fff;\r\n    font-size: 14px;\r\n    padding: 20px 20px;\r\n    z-index: 100;\r\n    .type-wrap {\r\n      background-color: #348498;\r\n      display: inline-block;\r\n      padding: 6px;\r\n      border-radius: 4px;\r\n      position: relative;\r\n      align-self: baseline;\r\n      .title {\r\n        margin-right: 22px;\r\n      }\r\n      .title::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 12px;\r\n        bottom: 11px;\r\n        right: 32px;\r\n        width: 1px;\r\n        background-color: #e9e9e9;\r\n      }\r\n    }\r\n    .data-wrap {\r\n      margin-top: 10px;\r\n      font-size: 13px;\r\n      .time {\r\n        margin-right: 12px;\r\n        .sort-down {\r\n          font-size: 12px;\r\n        }\r\n      }\r\n      .expense {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n  .content-wrap {\r\n    height: calc(~\"(100% - 50px)\");\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n    background-color: #f5f5f5;\r\n    padding: 10px;\r\n    // padding-bottom: 50px;\r\n  }\r\n  .add {\r\n    position: fixed;\r\n    bottom: 100px;\r\n    right: 30px;\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    border: 2px solid #e9e9e9;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 30px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\r\n    color: @primary;\r\n  }\r\n}\r\n/**\r\n * 样式分析\r\n * 头部部分很简单，.header 通过 flex 实现上下布局，这样对居中操作比较友好。\r\n * 这里要注意的是，之所以给 .home 一个 padding-top: 80px，是因为 header 的高度是 80px，\r\n * 而 .header 定位到了顶部，方便后面列表滚动的时候，header 一直都出现在顶部。\r\n * 这样会导致 header 脱离文档流，列表会顶上去，所以这里才会给 .home 一个 80 的内边距。\r\n */\r\n</style>"],"sourceRoot":""}]}