{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\src\\components\\VueImageVerify.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\src\\components\\VueImageVerify.vue","mtime":1644923803077},{"path":"C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L1VzZXJzL2xlbm92by9EZXNrdG9wL2Nvc3QvZGFpbHktY29zdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCB7IHJlYWN0aXZlLCBvbk1vdW50ZWQsIHJlZiwgdG9SZWZzIH0gZnJvbSAndnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIHNldHVwOiBmdW5jdGlvbiBzZXR1cCgpIHsKICAgIHZhciB2ZXJpZnkgPSByZWYobnVsbCk7CiAgICB2YXIgc3RhdGUgPSByZWFjdGl2ZSh7CiAgICAgIHBvb2w6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjEyMzQ1Njc4OTAnLAogICAgICAvLyDlrZfnrKbkuLIKICAgICAgd2lkdGg6IDEyMCwKICAgICAgaGVpZ2h0OiA0MCwKICAgICAgaW1nQ29kZTogJycKICAgIH0pOwogICAgb25Nb3VudGVkKGZ1bmN0aW9uICgpIHsKICAgICAgLy8g5Yid5aeL5YyW57uY5Yi25Zu+54mH6aqM6K+B56CBCiAgICAgIHN0YXRlLmltZ0NvZGUgPSBkcmF3KCk7CiAgICB9KTsgLy8g54K55Ye75Zu+54mH6YeN5paw57uY5Yi2CgogICAgdmFyIGhhbmRsZURyYXcgPSBmdW5jdGlvbiBoYW5kbGVEcmF3KCkgewogICAgICBzdGF0ZS5pbWdDb2RlID0gZHJhdygpOwogICAgfTsgLy8g6ZqP5py65pWwCgoKICAgIHZhciByYW5kb21OdW0gPSBmdW5jdGlvbiByYW5kb21OdW0obWluLCBtYXgpIHsKICAgICAgcmV0dXJuIHBhcnNlSW50KE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbik7CiAgICB9OyAvLyDpmo/mnLrpopzoibIKCgogICAgdmFyIHJhbmRvbUNvbG9yID0gZnVuY3Rpb24gcmFuZG9tQ29sb3IobWluLCBtYXgpIHsKICAgICAgdmFyIHIgPSByYW5kb21OdW0obWluLCBtYXgpOwogICAgICB2YXIgZyA9IHJhbmRvbU51bShtaW4sIG1heCk7CiAgICAgIHZhciBiID0gcmFuZG9tTnVtKG1pbiwgbWF4KTsKICAgICAgcmV0dXJuICJyZ2IoIi5jb25jYXQociwgIiwiKS5jb25jYXQoZywgIiwiKS5jb25jYXQoYiwgIikiKTsKICAgIH07IC8vIOe7mOWItuWbvueJhwoKICAgIC8qKg0KICAgICog5Luj56CB55qE5YWz6ZSu54K55bCx5ZyoIGRyYXcg5pa55rOV77yMDQogICAgKiDor6Xmlrnms5XlhoXpgJrov4cgdmVyaWZ5LnZhbHVlLmdldENvbnRleHQoJzJkJykg5pa55rOV6L+U5Zue5LiA5Liq55So5LqO5Zyo55S75biD5LiK57uY5Zu+55qE546v5aKD77yMDQogICAgKiDotYvlgLznu5kgY3R4IOWQju+8jOWPr+S7pemAmui/hyBjdHgg5ZyoIGNhbnZhcyDnlLvluIPkuIrlgZrmlofnq6DjgIINCiAgICAqDQogICAgKiDngrnlh7vpqozor4HnoIHnmoTml7blgJnvvIzms6jmhI/opoHph43mlrDliJ3lp4vljJYgZHJhdyDmlrnms5XvvIzlubblsIbnlJ/miJDnmoTlgLzov5Tlm57nu5kgaW1nQ29kZe+8jA0KICAgICog5ZCO57ut6LCD55So57uE5Lu255qE5pe25YCZ77yM5Y+v5Lul5LuO5aSW6YOo6YCa6L+HIHJlZu+8jOaLv+WIsOe7hOS7tuWGheeahCBpbWdDb2RlIOWPmOmHj++8jA0KICAgICog54S25ZCO5YaN5LqO55So5oi36L6T5YWl55qE5YC86L+b6KGM5q+U6L6D77yM6L+Z6YeM6Iul5piv5LiN6YeN5paw6LWL5YC877yMaW1nQ29kZSDkvJrlpLHljrvml7bmlYjmgKcNCiAgICAqLwoKCiAgICB2YXIgZHJhdyA9IGZ1bmN0aW9uIGRyYXcoKSB7CiAgICAgIC8vIDMu5aGr5YWF6IOM5pmv6aKc6Imy77yM6IOM5pmv6aKc6Imy6KaB5rWF5LiA54K5CiAgICAgIHZhciBjdHggPSB2ZXJpZnkudmFsdWUuZ2V0Q29udGV4dCgnMmQnKTsgLy8g5aGr5YWF6aKc6ImyCgogICAgICBjdHguZmlsbFN0eWxlID0gcmFuZG9tQ29sb3IoMTgwLCAyMzApOyAvLyDloavlhYXnmoTkvY3nva4KCiAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCBzdGF0ZS53aWR0aCwgc3RhdGUuaGVpZ2h0KTsgLy8g5a6a5LmJcGFyYW1UZXh0CgogICAgICB2YXIgaW1nQ29kZSA9ICcnOyAvLyA0Lumaj+acuuS6p+eUn+Wtl+espuS4su+8jOW5tuS4lOmaj+acuuaXi+i9rAoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyBpKyspIHsKICAgICAgICAvLyDpmo/mnLrnmoTlm5vkuKrlrZcKICAgICAgICB2YXIgdGV4dCA9IHN0YXRlLnBvb2xbcmFuZG9tTnVtKDAsIHN0YXRlLnBvb2wubGVuZ3RoKV07CiAgICAgICAgaW1nQ29kZSArPSB0ZXh0OyAvLyDpmo/mnLrnmoTlrZfkvZPlpKflsI8KCiAgICAgICAgdmFyIGZvbnRTaXplID0gcmFuZG9tTnVtKDE4LCA0MCk7IC8vIOWtl+S9k+maj+acuueahOaXi+i9rOinkuW6pgoKICAgICAgICB2YXIgZGVnID0gcmFuZG9tTnVtKC0zMCwgMzApOwogICAgICAgIC8qDQogICAgICAgICAqIOe7mOWItuaWh+Wtl+W5tuiuqeWbm+S4quaWh+Wtl+WcqOS4jeWQjOeahOS9jee9ruaYvuekuueahOaAnei3ryA6DQogICAgICAgICAqIDHjgIHlrprkuYnlrZfkvZMNCiAgICAgICAgICogMuOAgeWumuS5ieWvuem9kOaWueW8jw0KICAgICAgICAgKiAz44CB5aGr5YWF5LiN5ZCM55qE6aKc6ImyDQogICAgICAgICAqIDTjgIHkv53lrZjlvZPliY3nmoTnirbmgIHvvIjku6XpmLLmraLku6XkuIrnmoTnirbmgIHlj5flvbHlk43vvIkNCiAgICAgICAgICogNeOAgeW5s+enuyB0cmFuc2xhdGUoKQ0KICAgICAgICAgKiA244CB5peL6L2sIHJvdGF0ZSgpDQogICAgICAgICAqIDfjgIHloavlhYXmloflrZcNCiAgICAgICAgICogOOOAgXJlc3RvcmUg5Ye65qCIDQogICAgICAgICAqICovCgogICAgICAgIGN0eC5mb250ID0gZm9udFNpemUgKyAncHggU2ltaGVpJzsKICAgICAgICBjdHgudGV4dEJhc2VsaW5lID0gJ3RvcCc7CiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHJhbmRvbUNvbG9yKDgwLCAxNTApOwogICAgICAgIC8qDQogICAgICAgICAqIHNhdmUoKSDmlrnms5XmiorlvZPliY3nirbmgIHnmoTkuIDku73mi7fotJ3ljovlhaXliLDkuIDkuKrkv53lrZjlm77lg4/nirbmgIHnmoTmoIjkuK3jgIINCiAgICAgICAgICog6L+Z5bCx5YWB6K645oKo5Li05pe25Zyw5pS55Y+Y5Zu+5YOP54q25oCB77yMDQogICAgICAgICAqIOeEtuWQju+8jOmAmui/h+iwg+eUqCByZXN0b3JlKCkg5p2l5oGi5aSN5Lul5YmN55qE5YC844CCDQogICAgICAgICAqIHNhdmXmmK/lhaXmoIjvvIxyZXN0b3JlIOaYr+WHuuagiOOAgg0KICAgICAgICAgKiDnlKjmnaXkv53lrZhDYW52YXPnmoTnirbmgIHjgIJzYXZlIOS5i+WQju+8jOWPr+S7peiwg+eUqCBDYW52YXMg55qE5bmz56e744CB5pS+57yp44CB5peL6L2s44CB6ZSZ5YiH44CB6KOB5Ymq562J5pON5L2c44CCIHJlc3RvcmXvvJrnlKjmnaXmgaLlpI0gQ2FudmFzIOS5i+WJjeS/neWtmOeahOeKtuaAgeOAgumYsuatoiBzYXZlIOWQjuWvuSBDYW52YXMg5omn6KGM55qE5pON5L2c5a+55ZCO57ut55qE57uY5Yi25pyJ5b2x5ZON44CCDQogICAgICAgICAqDQogICAgICAgICAqICovCgogICAgICAgIGN0eC5zYXZlKCk7CiAgICAgICAgY3R4LnRyYW5zbGF0ZSgzMCAqIGkgKyAxNSwgMTUpOwogICAgICAgIGN0eC5yb3RhdGUoZGVnICogTWF0aC5QSSAvIDE4MCk7IC8vIGZpbGxUZXh0KCkg5pa55rOV5Zyo55S75biD5LiK57uY5Yi25aGr6Imy55qE5paH5pys44CC5paH5pys55qE6buY6K6k6aKc6Imy5piv6buR6Imy44CCCiAgICAgICAgLy8g6K+35L2/55SoIGZvbnQg5bGe5oCn5p2l5a6a5LmJ5a2X5L2T5ZKM5a2X5Y+377yM5bm25L2/55SoIGZpbGxTdHlsZSDlsZ7mgKfku6Xlj6bkuIDnp43popzoibIv5riQ5Y+Y5p2l5riy5p+T5paH5pys44CCCiAgICAgICAgLy8gY29udGV4dC5maWxsVGV4dCh0ZXh0LHgseSxtYXhXaWR0aCk7CgogICAgICAgIGN0eC5maWxsVGV4dCh0ZXh0LCAtMTUgKyA1LCAtMTUpOwogICAgICAgIGN0eC5yZXN0b3JlKCk7CiAgICAgIH0gLy8gNS7pmo/mnLrkuqfnlJ815p2h5bmy5omw57q/LOW5suaJsOe6v+eahOminOiJsuimgea1heS4gOeCuQoKCiAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCA1OyBfaSsrKSB7CiAgICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICAgIGN0eC5tb3ZlVG8ocmFuZG9tTnVtKDAsIHN0YXRlLndpZHRoKSwgcmFuZG9tTnVtKDAsIHN0YXRlLmhlaWdodCkpOwogICAgICAgIGN0eC5saW5lVG8ocmFuZG9tTnVtKDAsIHN0YXRlLndpZHRoKSwgcmFuZG9tTnVtKDAsIHN0YXRlLmhlaWdodCkpOwogICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IHJhbmRvbUNvbG9yKDE4MCwgMjMwKTsKICAgICAgICBjdHguY2xvc2VQYXRoKCk7CiAgICAgICAgY3R4LnN0cm9rZSgpOwogICAgICB9IC8vIDYu6ZqP5py65Lqn55SfNDDkuKrlubLmibDnmoTlsI/ngrkKCgogICAgICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCA0MDsgX2kyKyspIHsKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgY3R4LmFyYyhyYW5kb21OdW0oMCwgc3RhdGUud2lkdGgpLCByYW5kb21OdW0oMCwgc3RhdGUuaGVpZ2h0KSwgMSwgMCwgMiAqIE1hdGguUEkpOwogICAgICAgIGN0eC5jbG9zZVBhdGgoKTsKICAgICAgICBjdHguZmlsbFN0eWxlID0gcmFuZG9tQ29sb3IoMTUwLCAyMDApOwogICAgICAgIGN0eC5maWxsKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpbWdDb2RlOwogICAgfTsKCiAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0b1JlZnMoc3RhdGUpKSwge30sIHsKICAgICAgdmVyaWZ5OiB2ZXJpZnksCiAgICAgIGhhbmRsZURyYXc6IGhhbmRsZURyYXcKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["C:\\Users\\lenovo\\Desktop\\cost\\daily-cost\\src\\components\\VueImageVerify.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"img-verify\">\r\n    <canvas ref=\"verify\" :width=\"width\" :height=\"height\" @click=\"handleDraw\"></canvas>\r\n  </div>\r\n</template>\r\n<script type=\"text/ecmascript-6\">\r\nimport { reactive, onMounted, ref, toRefs } from 'vue'\r\nexport default {\r\n  setup() {\r\n    const verify = ref(null)\r\n    const state = reactive({\r\n      pool: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', // 字符串\r\n      width: 120,\r\n      height: 40,\r\n      imgCode: ''\r\n    })\r\n    onMounted(() => {\r\n      // 初始化绘制图片验证码\r\n      state.imgCode = draw()\r\n    })\r\n    \r\n    // 点击图片重新绘制\r\n    const handleDraw = () => {\r\n      state.imgCode = draw()\r\n    }\r\n\r\n    // 随机数\r\n    const randomNum = (min, max) => {\r\n      return parseInt(Math.random() * (max - min) + min)\r\n    }\r\n    // 随机颜色\r\n    const randomColor = (min, max) => {\r\n      const r = randomNum(min, max)\r\n      const g = randomNum(min, max)\r\n      const b = randomNum(min, max)\r\n      return `rgb(${r},${g},${b})`\r\n    }\r\n\r\n    // 绘制图片\r\n    /**\r\n    * 代码的关键点就在 draw 方法，\r\n    * 该方法内通过 verify.value.getContext('2d') 方法返回一个用于在画布上绘图的环境，\r\n    * 赋值给 ctx 后，可以通过 ctx 在 canvas 画布上做文章。\r\n    *\r\n    * 点击验证码的时候，注意要重新初始化 draw 方法，并将生成的值返回给 imgCode，\r\n    * 后续调用组件的时候，可以从外部通过 ref，拿到组件内的 imgCode 变量，\r\n    * 然后再于用户输入的值进行比较，这里若是不重新赋值，imgCode 会失去时效性\r\n    */\r\n    const draw = () => {\r\n      // 3.填充背景颜色，背景颜色要浅一点\r\n      const ctx = verify.value.getContext('2d')\r\n      // 填充颜色\r\n      ctx.fillStyle = randomColor(180, 230)\r\n      // 填充的位置\r\n      ctx.fillRect(0, 0, state.width, state.height)\r\n      // 定义paramText\r\n      let imgCode = ''\r\n      // 4.随机产生字符串，并且随机旋转\r\n      for (let i = 0; i < 4; i++) {\r\n        // 随机的四个字\r\n        const text = state.pool[randomNum(0, state.pool.length)]\r\n        imgCode += text\r\n        // 随机的字体大小\r\n        const fontSize = randomNum(18, 40)\r\n        // 字体随机的旋转角度\r\n        const deg = randomNum(-30, 30)\r\n        /*\r\n         * 绘制文字并让四个文字在不同的位置显示的思路 :\r\n         * 1、定义字体\r\n         * 2、定义对齐方式\r\n         * 3、填充不同的颜色\r\n         * 4、保存当前的状态（以防止以上的状态受影响）\r\n         * 5、平移 translate()\r\n         * 6、旋转 rotate()\r\n         * 7、填充文字\r\n         * 8、restore 出栈\r\n         * */\r\n        ctx.font = fontSize + 'px Simhei'\r\n        ctx.textBaseline = 'top'\r\n        ctx.fillStyle = randomColor(80, 150)\r\n        /*\r\n         * save() 方法把当前状态的一份拷贝压入到一个保存图像状态的栈中。\r\n         * 这就允许您临时地改变图像状态，\r\n         * 然后，通过调用 restore() 来恢复以前的值。\r\n         * save是入栈，restore 是出栈。\r\n         * 用来保存Canvas的状态。save 之后，可以调用 Canvas 的平移、放缩、旋转、错切、裁剪等操作。 restore：用来恢复 Canvas 之前保存的状态。防止 save 后对 Canvas 执行的操作对后续的绘制有影响。\r\n         *\r\n         * */\r\n        ctx.save()\r\n        ctx.translate(30 * i + 15, 15)\r\n        ctx.rotate((deg * Math.PI) / 180)\r\n        // fillText() 方法在画布上绘制填色的文本。文本的默认颜色是黑色。\r\n        // 请使用 font 属性来定义字体和字号，并使用 fillStyle 属性以另一种颜色/渐变来渲染文本。\r\n        // context.fillText(text,x,y,maxWidth);\r\n        ctx.fillText(text, -15 + 5, -15)\r\n        ctx.restore()\r\n      }\r\n      // 5.随机产生5条干扰线,干扰线的颜色要浅一点\r\n      for (let i = 0; i < 5; i++) {\r\n        ctx.beginPath()\r\n        ctx.moveTo(randomNum(0, state.width), randomNum(0, state.height))\r\n        ctx.lineTo(randomNum(0, state.width), randomNum(0, state.height))\r\n        ctx.strokeStyle = randomColor(180, 230)\r\n        ctx.closePath()\r\n        ctx.stroke()\r\n      }\r\n      // 6.随机产生40个干扰的小点\r\n      for (let i = 0; i < 40; i++) {\r\n        ctx.beginPath()\r\n        ctx.arc(randomNum(0, state.width), randomNum(0, state.height), 1, 0, 2 * Math.PI)\r\n        ctx.closePath()\r\n        ctx.fillStyle = randomColor(150, 200)\r\n        ctx.fill()\r\n      }\r\n      return imgCode\r\n    }\r\n\r\n    return {\r\n      ...toRefs(state),\r\n      verify,\r\n      handleDraw\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style type=\"text/css\">\r\n.img-verify canvas {\r\n  cursor: pointer;\r\n}\r\n</style>"],"sourceRoot":""}]}